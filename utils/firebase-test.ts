import { auth, db } from '../config/firebase.config';

/**
 * Fonction pour tester la configuration Firebase
 */
export const testFirebaseConfig = async () => {
  console.log('üî• Test de la configuration Firebase...');
  
  try {
    // Test 1: V√©rifier que Firebase Auth est initialis√©
    console.log('üì± Firebase Auth App:', auth.app.name);
    console.log('üîê Firebase Auth config:', auth.config);
    
    // Test 2: V√©rifier que Firestore est initialis√©  
    console.log('üóÑÔ∏è Firestore App:', db.app.name);
    
    // Test 3: V√©rifier l'√©tat d'authentification actuel
    console.log('üë§ Utilisateur actuel:', auth.currentUser ? 'Connect√©' : 'D√©connect√©');
    
    console.log('‚úÖ Configuration Firebase OK');
    return true;
  } catch (error) {
    console.error('‚ùå Erreur de configuration Firebase:', error);
    return false;
  }
};

/**
 * Fonction pour diagnostiquer les probl√®mes d'authentification
 */
export const diagnoseAuthIssues = () => {
  console.log('üîç Diagnostic de l\'authentification...');
  
  // V√©rifier que les services Firebase sont bien import√©s
  console.log('Auth service:', typeof auth);
  console.log('Firestore service:', typeof db);
  
  // V√©rifier la configuration
  console.log('Project ID:', auth.app.options.projectId);
  console.log('Auth Domain:', auth.app.options.authDomain);
  
  // Instructions pour l'utilisateur
  console.log('üìã V√©rifications √† faire:');
  console.log('1. Firebase Authentication activ√© dans la console?');
  console.log('2. E-mail/mot de passe activ√© comme m√©thode de connexion?');
  console.log('3. R√®gles Firestore configur√©es pour les utilisateurs authentifi√©s?');
};